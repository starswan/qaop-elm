# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        #  3.3 tested locally, so just test beyond that (we're writing Elm, not Ruby here)
        #  3.5 is still preview-1 so doesn't work yet (nokigiri)
        ruby-version: ['3.4']

    env:
      HZ: 19.574
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Set up yarn cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Set up elm cache
        uses: actions/cache@v4
        with:
          path: | 
            $HOME/.elm 
            elm-stuff
          key: ${{ runner.os }}-elm-${{ hashFiles('elm.json') }}
          restore-keys: |
            ${{ runner.os }}-elm-

      - name: Yarn install
        run: yarn install
      # Run elm tests for correctness before speed tests
      - name: Run Elm tests
        run: yarn run elm-test
      # Run ruby tests in headless mode
      - name: Ruby tests
        run: xvfb-run -a bundle exec rake spec
